pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "Maven_3.9.3"
    }

    stages {
        stage('Clone Repository') {
            steps {
                
                //Checking whether the repository exists or not
                checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/farzanabjit/YSD_B02_DevOps_Library_Management_System.git']])
                // Get some code from a GitHub repository
            }
        }
        stage('Modify application.properties') {
            steps {
                script {
                    sh "sed -i 's/mysql-service/clouddevdb.cjldgoxvvwoc.us-west-2.rds.amazonaws.com/g' /var/lib/jenkins/workspace/AWS/src/main/resources/application.properties"
                    sh "sed -i 's/sparklmsdb/farzana1/g' /var/lib/jenkins/workspace/AWS/src/main/resources/application.properties"
                    sh "sed -i 's/root/admin/g' /var/lib/jenkins/workspace/AWS/src/main/resources/application.properties"
		            sh "sed -i 's/123456/admin#1234/g' /var/lib/jenkins/workspace/AWS/src/main/resources/application.properties"
                }
            }
        }
        
        stage('Build Project') {
            steps {
                sh 'mvn clean install'
            }
        }
        
        stage('Copy JAR to EC2') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: '52.12.188.71', keyFileVariable: 'SSH_KEY')]) {
                        def sourceFilePath = '/var/lib/jenkins/workspace/AWS/target/spark-lms-0.0.1-SNAPSHOT.jar'
                        def destinationPath = '/home/ec2-user/'

                        def scpCommand = "scp -i $SSH_KEY $sourceFilePath ec2-user@52.12.188.71:$destinationPath"
                        sh scpCommand
                    }
                }
            }
        }
        stage('SSH to EC2') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: '52.12.188.71', keyFileVariable: 'SSH_KEY')]) {
                    script {
                        def sshstop = "ssh -o StrictHostKeyChecking=no -i ${env.SSH_KEY} ec2-user@52.12.188.71 'pkill java || true'"
                        sh sshstop
                        //"ssh -i $SSH_KEY ec2-user@54.200.237.46 'pkill java'"
                        def sshCommand = "ssh -o StrictHostKeyChecking=no -i ${env.SSH_KEY} ec2-user@52.12.188.71 'java -jar /home/ec2-user/spark-lms-0.0.1-SNAPSHOT.jar &> /dev/null &'"
                        sh sshCommand
                        
                    }
                }
            }
        }
    }
}
